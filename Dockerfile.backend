# Use Python 3.11 slim image for better package compatibility
FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    libmagic1 \
    libmagic-dev \
    file \
    curl \
    gcc \
    g++ \
    python3-dev \
    && rm -rf /var/lib/apt/lists/*

# Update pip and install setuptools
RUN pip install --upgrade pip setuptools wheel

# Copy requirements first for better caching
COPY requirements-railway.txt .

# Install Python dependencies with fallback
RUN pip install --no-cache-dir -r requirements-railway.txt || \
    (echo "Trying fallback installation..." && \
     pip install --no-cache-dir Flask==2.3.3 Flask-CORS==4.0.0 pandas numpy scikit-learn requests python-dotenv werkzeug)

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p uploads outputs

# Set environment variables
ENV FLASK_APP=app.py
ENV FLASK_ENV=production
ENV PYTHONPATH=/app
ENV SECRET_KEY=railway-production-secret-key-32chars-long-0123456789abcdef
ENV PORT=5000
ENV MAX_CONTENT_LENGTH=104857600
ENV UPLOAD_FOLDER=uploads
ENV OUTPUT_FOLDER=outputs
ENV LOG_LEVEL=INFO
ENV CORS_ORIGINS=*

# Expose port
EXPOSE 5000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:${PORT:-5000}/health || exit 1

# Run the application with fallback script
COPY start.sh .
RUN chmod +x start.sh
CMD ["./start.sh"]